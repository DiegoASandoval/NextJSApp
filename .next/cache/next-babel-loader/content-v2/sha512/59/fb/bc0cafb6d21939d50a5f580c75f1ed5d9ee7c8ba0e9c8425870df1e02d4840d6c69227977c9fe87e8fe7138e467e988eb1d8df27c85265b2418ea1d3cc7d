{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/diego/Desktop/ReactNewCourse/NextJs/pages/index.js\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse meetups and find one near you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage; // export async function getStaticProps() {\n//   // fetch data from an API\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://diego:manejadatos123@cluster0.4njzt.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection('meetups');\n//   const meetups = await meetupsCollection.find().toArray();\n//   client.close();\n//   return {\n//     props: {\n//       meetups: meetups.map((meetup) => ({\n//         title: meetup.title,\n//         address: meetup.address,\n//         image: meetup.image,\n//         id: meetup._id.toString(),\n//       })),\n//     },\n//     revalidate: 1,\n//   };\n// }\n// export default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/diego/Desktop/ReactNewCourse/NextJs/pages/index.js"],"names":["Head","MeetupList","HomePage","props","meetups"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;;KAbQF,Q;;AA0CT,eAAeA,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return (\n    <>\n      <Head>\n        <title>Meetups</title>\n        <meta\n          name=\"description\"\n          content=\"Browse meetups and find one near you\"\n        ></meta>\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://diego:manejadatos123@cluster0.4njzt.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  fetch(\"\");\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n\n// export async function getStaticProps() {\n//   // fetch data from an API\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://diego:manejadatos123@cluster0.4njzt.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n\n//   const meetupsCollection = db.collection('meetups');\n\n//   const meetups = await meetupsCollection.find().toArray();\n\n//   client.close();\n\n//   return {\n//     props: {\n//       meetups: meetups.map((meetup) => ({\n//         title: meetup.title,\n//         address: meetup.address,\n//         image: meetup.image,\n//         id: meetup._id.toString(),\n//       })),\n//     },\n//     revalidate: 1,\n//   };\n// }\n\n// export default HomePage;"]},"metadata":{},"sourceType":"module"}